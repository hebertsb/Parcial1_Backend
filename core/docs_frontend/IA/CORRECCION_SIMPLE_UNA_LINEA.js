// üîß CORRECCI√ìN SIMPLE PARA EL PANEL DE RECONOCIMIENTO FACIAL
// Solo necesitas cambiar UNA L√çNEA en tu c√≥digo actual

// ‚ùå PROBLEMA EN TU C√ìDIGO ACTUAL (l√≠nea ~100):
// fetch('http://127.0.0.1:8000/api/seguridad/dashboard/')

// ‚úÖ SOLUCI√ìN - CAMBIAR POR:
// fetch('http://127.0.0.1:8000/api/seguridad/health/')

// üìã CAMBIOS ESPEC√çFICOS NECESARIOS:

/*
BUSCAR en tu archivo panel-reconocimiento-facial.tsx:

L√çNEA ~98-104:
‚ùå C√ìDIGO ACTUAL:
console.log('üîç Verificando conexi√≥n con backend...');
const response = await fetch('http://127.0.0.1:8000/api/seguridad/dashboard/');
console.log('üåê Test conexi√≥n:', response.status);

‚úÖ CAMBIAR POR:
console.log('üîç Verificando conexi√≥n con backend...');
const response = await fetch('http://127.0.0.1:8000/api/seguridad/health/');
console.log('üåê Test conexi√≥n:', response.status);

if (response.ok) {
  const data = await response.json();
  console.log('‚úÖ Backend funcionando:', data.message);
} else {
  console.log('‚ùå Backend error:', response.status);
}
*/

// üéØ EXPLICACI√ìN DEL CAMBIO:
// 
// 1. /api/seguridad/dashboard/ ‚Üí Requiere autenticaci√≥n (JWT token)
// 2. /api/seguridad/health/ ‚Üí NO requiere autenticaci√≥n
// 
// El health check devuelve esto:
// {
//   "success": true,
//   "message": "Backend funcionando correctamente",
//   "timestamp": "2025-09-29T22:09:31.544710+00:00",
//   "status": "online",
//   "version": "1.0.0"
// }

// üîÑ ALTERNATIVA: Si NECESITAS el dashboard espec√≠ficamente
// 
// Entonces necesitas manejar autenticaci√≥n:

const verificarConexionConAuth = async () => {
  try {
    // Opci√≥n 1: Solo verificar que backend existe
    const healthResponse = await fetch('http://127.0.0.1:8000/api/seguridad/health/');
    if (healthResponse.ok) {
      console.log('‚úÖ Backend OK - Sin autenticaci√≥n necesaria');
      return true;
    }
    
    // Opci√≥n 2: Si necesitas dashboard, primero hacer login
    const loginResponse = await fetch('http://127.0.0.1:8000/authz/login/', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        username: 'tu_usuario', // Cambiar por credenciales reales
        password: 'tu_password'
      })
    });
    
    if (loginResponse.ok) {
      const loginData = await loginResponse.json();
      const token = loginData.access_token || loginData.access;
      
      // Ahora s√≠ puedes acceder al dashboard
      const dashboardResponse = await fetch('http://127.0.0.1:8000/api/seguridad/dashboard/', {
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json'
        }
      });
      
      if (dashboardResponse.ok) {
        const dashboardData = await dashboardResponse.json();
        console.log('‚úÖ Dashboard accedido con token:', dashboardData);
        return true;
      }
    }
    
  } catch (error) {
    console.error('‚ùå Error en verificaci√≥n:', error);
    return false;
  }
};

// üìù RECOMENDACI√ìN:
// 
// Para reconocimiento facial NO necesitas el dashboard
// Solo cambia a /api/seguridad/health/ y listo
// 
// El reconocimiento facial funciona con:
// POST /api/seguridad/verificacion-tiempo-real/
// 
// Que NO requiere autenticaci√≥n