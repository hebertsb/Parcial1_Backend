# 游댢 MIGRACI칍N PARA AGREGAR CAMPOS NECESARIOS AL MODELO ReconocimientoFacial

"""
Migraci칩n para a침adir compatibilidad con el sistema corregido de propietarios
A침ade campos: persona_id, fotos_urls para soportar m칰ltiples fotos por usuario
"""

from django.db import migrations, models
import django.db.models.deletion

class Migration(migrations.Migration):

    dependencies = [
        ('seguridad', '0001_initial'),  # Ajustar seg칰n la 칰ltima migraci칩n
        ('authz', '0001_initial'),  # Para referencia a authz_persona
    ]

    operations = [
        # A침adir campo persona_id para compatibilidad con sistema authz
        migrations.AddField(
            model_name='reconocimientofacial',
            name='persona_id',
            field=models.IntegerField(blank=True, null=True, help_text='ID de persona en sistema authz'),
        ),
        
        # A침adir campo fotos_urls para almacenar m칰ltiples URLs de Dropbox
        migrations.AddField(
            model_name='reconocimientofacial',
            name='fotos_urls',
            field=models.TextField(blank=True, null=True, help_text='URLs de fotos en Dropbox (JSON)'),
        ),
        
        # A침adir campo fecha_actualizacion para tracking
        migrations.AddField(
            model_name='reconocimientofacial',
            name='fecha_actualizacion',
            field=models.DateTimeField(auto_now=True, help_text='칔ltima actualizaci칩n de fotos'),
        ),
        
        # A침adir 칤ndices para optimizar consultas
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_reconocimiento_persona ON reconocimiento_facial(persona_id);",
            reverse_sql="DROP INDEX IF EXISTS idx_reconocimiento_persona;"
        ),
    ]